02/07/2023

1. Начали с гитхаба. Познакомились с пулл реквестом

2. Создали форк проекта через кнопку Форк в гитхабе

3. Научились подключать виртуальное окружение.
Чтобы это сделать нам нужно следующее:
1) — Открыть терминал
2) — Перейти в папку куда хотим установить виртуальное окружение
3) — Прописать комманду python - m venv venv

4. Чтобы принять Пулл реквест мы переходим во вкладку Пулл_Реквест и потверждаем внизу
зеленой кнопкой его два раза.

5. Так же мы можем синхронизировать те изменения которые мы сделали через кнопку SyncFork.

6. Jupyter Notebook это специализированная среда разработки которая помогает нам:
    — Отслеживать вывод отдельной строки, функции, класса.
    — Разбивать код на составляющие
    — Код в этой среде выполняется поэтапно , то есть если у нас результат ячейки 3
    зависит от того были ли выполнены ячейки 1 и 2 , то мы сначала должны выполнить их
    — В нем есть возможность создания пометок(Markdown), это можно использовать для
    описания задачи перед ячейкой кода или чтобы подписать комментарий к предыдущей.

7. Стандартом написания кода на python является pep8, соблюдать его помагают специальные
расширения, линтеры.

8. Для каждого нового проэкта создается свое отдельное окружение дабы не засорять
основной интерпретатор

9. При исполнении проэкта изменения никогда не вносятся сразу в ветку main
Для изменений мы должны сначала сделать branch , это делается потому что программа
у тех кто её установил уже себе работает через последнюю контрольную версию
ветки main, если мы сразу внесем изменения туда , то программа перестанет работать на
всех устройствах где она установлена, так же мы не можем быть уверены, что нам получится
сразу написать правильный код в эту ветку, поэтому мы сначала делаем от неё отвлетвление
и оставляем main неизмененым. Благодаря этому приложение продолжает работать на устройствах,
мы также оставляем себе пространство для ошибок и их исправления.
Как только обновления готовы они выкатываються в новую версию main, и после каждого
обновления у нас сохраняется предыдущая контрольная точка, чтобы в случае чего человек
мог вернуться к той версии программы которая ему нравится больше всего.
#////////////////////////////
02/07/2023
END REPORt/////////////////////////


05/07/2023

1. На первом этапе урока мы повторяли базовые математичесские понятия, такие как:
цифры, числа, множества и дроби.
Множества чисел делятся на:
множество натуральных чисел(1234.....∞) N
множество целых положительных чисел — множество N включая 0
множество целых чисел (-∞...∞) Z
множество целых рациональных чисел Q = (множество Z + дроби, где м є Z, m є N), так как в знаменатиле не может
быть 0
множество целых иррациональных I (числа с бесконечной непереодичесской дробью , например число Пи)
множество вещественных чисел R (включает все предыдущие множества)

Вычитание это частный случай сложения:
3-2= 2+(-3)

Деление это частный случай умножения 3:5 = 3 * 1/5

Неправильная дробь — такая где числитель>знаменателя, правильная же наоборот

Чтобы сделать из неправильной дроби правильную, а точнее смешанную нам нужно:
Вычленить целую часть путем подсчета сколько раз знаменатель содержится в числителе
например:
7/2 = 3*2 = 6, так как 6 меньше чем 7, получается мы 3 записываем в целую часть а в не целой части остается:
7-6 = 1/2. В итоге 7/2 = 3 целых 1/2

Числа 7/11 = 0.676767.... это числа в бесконечном периоде

Любое число в степени 0 всегда 1
Любое число в степени 1 это само число.
Любое число в отрицательной степени -1 это тоже число только перевернутое, так как мы знаем,
что 5 это не просто 5, это 5/1 соотвественно 5 в отрицательной степени(-1) даст нам 1/5
Проще говоря мы всегда должны помнить, что когда число имеет положительную степень , то его числитель
увеличивается по экспоненте, когда же у нас степень отрицательная это значит что мы должны перевернуть
наше число представленное в виде дроби 5/1 = 1/5.
Так же стоит сказать что при возведении числа в отрицательную степень мы увеличиваем его знаменатель по экспоненте

К примеру 5(-2(степени)) = 1/5*5 = 1(числитель)/25(знаменатель)

Любой корень из любого числа можно записать как это число в степени 1/2 например 4 в степени 1/2 = 4 * 0.5 = 2

Чтобы сократить дробь мы можем числитель и знаменатель умножить на одно и тоже число,кроме нуля.

Любое число по модулю вернет то же натуральное число.
например:
2/√2 = (2/√2) * (√2/√2) = (2√2)/(√2 * √2) = (2√2)/2 = √2.

числа (-1) в четвертой степени в скобках и -1 в четвертой степени без скобок дадут нам разный результат,
так как в посленем случае знак минус к основанию степени не относится

Отрезки:
Выколотые точки — значение не входит в промежуток
Жирные точки — значение входит
Круглая скобка — значение не входит
Квадратная скобка — значение входит

Интервал это промежуток в котором начальное и конечное значение не входит в него.
Полуинтервал , это когда либо начальное либо конечное значение входит
Отрезок, это когда входят два значения в промежуток.

Любой корень из числа можно записать в виде перевернутого выражения , где число под корнем будет уже
умножаться на перевернутый вариант числа обозначающего корень например корень из 2 = 2 * 1/2
///// END MATH ////////

Второй этап Python:
Здесь мы сначала решили задачу с помощью логики и алгоритмов где нужно было поделить арбуз каждому
из участников, так чтобы у каждого из них была парная часть.

После мы прошли регистрацию в ProjectEuler, где находятся математичесские задачи
В leetcode — коммерчесская разработка
В codelabs — олимпиадная математика.

Функция print выводит результат на экран

знак = присваивает значение переменной

Любое значение переданное нам в инпут вернет строку

Условный оператор if  значит если

Так же он может включать в себя elif (другое условие которое должно исполнится, если не исполнилось первое)

else — вывод чего то если ни одно из условий не соотвестует задаче.

оператор and значит что оба условия должны быть истинными, оператор or значит что одно из условий должно
быть истинным
////////END Python///////

#////////////////////////////
05/07/2023
END REPORt/////////////////////////


12/07/2023

Продолжили изучение математики, изучали  умножение дробей, сложение и деление.
Так же вспомнили что такое одночлен и многочлен. Выучили как приводятся подобные слагаемые
Как перемножать суммы и как преобразовывать корень в степень и наоборот , а так же как
складывать переменную в разных степенях.
Изучали формулы сокращеного умножения , а так же как представлять сумму в виде произведения
Закончили на теме свойства степеней и корней

#////////////////////////////
12/07/2023
END REPORt/////////////////////////


19/07/2023
Изучили как работают переменные, научились определять тип переменной , вызывать функции
"под капотом", поняли как устроен вызов любой функции и что () == __call__
Методы с двумя нижними подчеркиваниями называются дандер методами.
Узнали что  True это 1  а  False  это 0.
Выучили таблицу истинности, чему равна пустая строка, как взаимодействовать с операторами  or
and.
Поняли как использовать магичесский метод __dir__ ,  а так же  функцию help()  для определения
того какие методы могут быть использованы с переменной нашего типа.
Запомнили как определить ссылается ли два обьекта на одну ячейку в памяти, то есть являются
ли они одним обьектом или нет.
Узнали, что функции бывают двух типов = результирующие(возвращают результат) и  void(функция
которая не возвращает результирующего значения)

#////////////////////////////
19/07/2023
END REPORt/////////////////////////


26/07/2023

Изучали свойства степеней и корней , повторили как умножать степени , как складывать их
у чисел с одинаковыми знаменателями, научились вытаскивать степень из под корня, выучили
правила арифметичесской и геометричесской прогрессии. Ознакомились и выучили формулы
для нахождения геометричесской и арифметичесской прогрессии, а именно суммы первых н-членов,
значение конкретного члена,а так же нахождения конкретного знаменателя геометричесской
прогрессии и разности арифметичесской прогрессии.
Узнали как себя ведут прогрессии в зависимости от заданных параметров.

#////////////////////////////
26/07/2023
END REPORt/////////////////////////


02/08/2023

Научился допонительным взаимодействиям с гит, делать и так же запрашивать ревью. Повторили как просить права на доступ к
репозиторию. Импортировали другие репозитории через https.
Познакомились с эcкейп последовательностью /n. Повторили как работать с гит pull push and commit.
Ознакомились с функцией для написания тестов assert и написали с её помощью тест для функции add.
Установили black formatter для форматирования кода. Просматривали проэкты и искали в них то, что нам не понятно,
после запрашивали ревью на них.
Ответили на ревью про def, return and while.


#////////////////////////////
02/08/2023
END REPORT/////////////////////////


////////////////////////////
09/08/2023
/////////////////////////

Изучали математику по английскому учебнику, рассмотрели основные типы множеств и их обозначения.
Вспомнили некоторые правила произношений слов в английском языке. Изучали слова которые нам не знакомы
Снова повторили графичесское представление множеств Вена. Рассмотрели как обьединяються множества, их
пересечения. Если множество не содержит в себе элементов, то такое множество называется пустым.
Каждый елемент множества встречается только раз. Выучили правило произношений согласных перед определенными
гласными. Так же повторили правило о том как произносить слова с окончанием на ed. Если в английском
после согласной идет гласная Y,I,E то согласная произносится так же как и в алфавите.


////////////////////////////
09/08/2023
END REPORT/////////////////////////


////////////////////////////
16/08/2023
/////////////////////////

Начали со свойств корней , вспомнили что такое радикал , основные формулы радикала. Начали
использовать бином Паскаля для разложения  суммы/разницы чисел в n-й степени. Немного ознакомились
с комбинаторикой. Выучили правило произношения th. Повторили правила сложения степеней при умножении
для чисел с одинаковым основанием. Рассмотрели термины как бином, FOIL. Научились возводить дробь в
степень в зависимости от того где у нас стоит показатель степени. Прошли 100 страниц книги college
algebra Blitzer. Делали проверки правил, для того чтобы убедиться что они действительно так работают.
Вспомнили правило модуля при возведении числа в положительную степень , но так же вспомнили разницу
когда  отрицательное число без скобок возводится в положительную степень и когда такое же число в
скобках возводится в положительную степень. Так же наглядно увидели что многочлены можно умножать
в столбик так же как и целые числа.

////////////////////////////
16/08/2023
END REPORT/////////////////////////


////////////////////////////
23/08/2023
/////////////////////////

Выучили комутативное свойство, свойство идентичности, ассоциативное свойство, обратное свойство,
дистрибутивное свойство. Вспомнили как строятся графики функций и что такое линейная функция.
Линейная функция y = bx + c. Результатом линейной функции на графике всегда будет прямая линия.
Чтобы нарисовать график функции нужно взять минимум 6 точек. График функции делиться на 4 секции,
слева-направо,сверху-вниз секция 1(x<=0&y>=0), секция 2(x>=0&y>=0),секция 3(x<=0&y<=0),
секция 4(x>=0&y<=0). Точка на функции записывается следующим образом: А[x,y].
Ось абцисс это горизонтальная ось Х, а ось ординат это вертикальная ось Y.
Ознакомились с определением мнимого числа , которое само по себе не может существовать но используется
для вычислений  \sqrt{-1} = i  & i называют мнимым числом. Линейные функции чаще всего показывают
динамику изменений цены , роста населения, увеличения количества покупок и так далее.

////////////////////////////
23/08/2023
END REPORT/////////////////////////

///////////////////////////
12/10/2023
//////////////////////////

Научился транспонировать, транслировать и создавать  векторы. Рассмотрели код для создания
скалярного произведения, дот произведения, а так же смешанного произведения. Установили и подключили
библиотеки numpy , matplotlib. Научились рисовать графики с сеткой , менять их форму и масштаб
Рассмотрели как умножаются два вектора которые находятся в разной ориентации.
Ознакомился с понятиями ориентированных и не ориентированных векторов. Научился проверять
сколько памяти выделяется под определенный вектор и как можно это изменить . Повторили расположение
синуса и косинуса относительно геомметричесского круга.


///////////////////////////
12/10/2023
END REPORT//////////////////////////
